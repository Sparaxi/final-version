// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile19 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile20 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile21 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile22 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile23 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile24 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile25 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile26 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile27 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile28 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile29 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile30 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile31 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "woestijn_level":
            case "level1":return tiles.createTilemap(hex``, img`
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile3,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile1,myTiles.tile12,myTiles.tile15], TileScale.Sixteen);
            case "grasslands_level":
            case "grasslands_level1":return tiles.createTilemap(hex``, img`
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
................................
`, [myTiles.transparency16,sprites.castle.tileGrass2,myTiles.tile29,myTiles.tile30,myTiles.tile31], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile1":return tile1;
            case "tile2":return tile2;
            case "tile3":return tile3;
            case "tile5":return tile5;
            case "tile6":return tile6;
            case "tile7":return tile7;
            case "tile8":return tile8;
            case "tile9":return tile9;
            case "tile10":return tile10;
            case "tile11":return tile11;
            case "tile12":return tile12;
            case "sand_tile":
            case "tile13":return tile13;
            case "sand_tile2":
            case "tile14":return tile14;
            case "sand_tile_grass_links":
            case "tile16":return tile16;
            case "sand_tile_grass_rechts":
            case "tile17":return tile17;
            case "sand_tile_grass_top":
            case "tile18":return tile18;
            case "sand_tile_grass_down":
            case "tile19":return tile19;
            case "sand_tile_grass_random":
            case "tile20":return tile20;
            case "sand_tile_grass_random_2":
            case "tile21":return tile21;
            case "sand_tile_grass_random_3":
            case "tile22":return tile22;
            case "sand_tile_random":
            case "tile23":return tile23;
            case "grass_corner_upper_left":
            case "tile24":return tile24;
            case "grass_corner_upper_right":
            case "tile25":return tile25;
            case "grass_corner_bottom_left":
            case "tile26":return tile26;
            case "grass_corner_bottom_right":
            case "tile27":return tile27;
            case "ground_dirt":
            case "tile28":return tile28;
            case "grass_grasslands":
            case "tile29":return tile29;
            case "bloemen_grasslands":
            case "tile30":return tile30;
            case "water_tile_desert":
            case "tile15":return tile15;
            case "water_tile_grasslands":
            case "tile31":return tile31;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
